<?php/* * Created on January 9, 2014 * Author: Mohammad Faisal Ahmed <faisal.ahmed0001@gmail.com> */ include_once 'utils_zoho_request.php';include_once 'utils_conversion.php';function module_load_before_sync($zoho_module_name) {    global $EXCLUDE_FIELDS;    global $DEFAULT_ID_FOR_MODULE;    global $MANDATORY_FIELD_FOR_MODULE;    $newConverter = new CsvConversion();    $csv_column_name = $newConverter->parse_csv_column();    $module_column_name = array();	$dataMigrationControllerObj = new ZohoDataSync();	$response = $dataMigrationControllerObj->getRecordById($zoho_module_name, $DEFAULT_ID_FOR_MODULE[$zoho_module_name], 2);    $xml = simplexml_load_string($response);    if ($dataMigrationControllerObj->checkError($xml)) {	} else {	    foreach ($xml->result->Contacts->row->FL as $key => $value) {	        if (is_object($value) && !in_array((string)$value['val'], $EXCLUDE_FIELDS)) {                $temp_value = (string)$value['val'];                $mendatory = '';                if (in_array($temp_value, $MANDATORY_FIELD_FOR_MODULE[$zoho_module_name])) $mendatory = '<span style="color: red;font-size: 1.3em;font-weight: bolder;">*</span>';	            $module_column_name[str_replace(' ', '_', $temp_value)] = $temp_value . $mendatory;	        }	    }	}    /*//TODO: Please remove below section and uncomment upper section for live    $module_column_name = array(        "First_name" => "First name",        "Last_name" => "Last name",        "Email" => "Email",        "Account_name" => "Account name"    );*/?><div class="block" style="margin: 10px 20px 25px 0px; padding-bottom: 0px;">	<div class="block_head">		<div class="bheadl"></div>		<div class="bheadr"></div>		<h2 style="margin: 0;">Zoho Data Sync Automated Tools Settings</h2>		<h2 style="margin: 0; float: right;"><a href="#" onclick="location.reload(true);">Back to Step one</a></h2>	</div>	<div class="block_content">        <form id="zds_file_upload_into_zoho" name="zds_file_upload_into_zoho" onsubmit="return validate_form_step_2();" method="post" action="">            <input type="hidden" name="zds_automated_hidden" value="step2"/>            <input type="hidden" name="zoho_module_name" value="<?php echo $zoho_module_name ?>"/>            <h3 style="text-decoration: underline;">Step Two</h3>            <h2>Please map between Zoho module's column and your file's column to migrate your data</h2>            <h3><span style="color: red;font-size: 1.3em;font-weight: bolder;">*</span> denotes the mandatory field.</h3>            <?php foreach ($module_column_name as $key => $value) { ?>            <p style="padding: 0px;">                <label for="<?php echo $key ?>">Zoho Column: <?php echo $value ?></label>                <select id="<?php echo $key ?>" class="styled" name="zoho_column_matching[<?php echo $key ?>]">                    <option selected="selected" value="">Your Column: None</option>                    <?php foreach ($csv_column_name as $key2 => $value2) { ?>                    <option value="<?php echo $key2 ?>">Your Column: <?php echo $value2 ?></option>                    <?php } ?>                </select>            </p>            <?php } ?>            <hr />            <p>                <input type="submit" class="submit small" value="Submit" />            </p>        </form>	</div>	<div class="bendl"></div>	<div class="bendr"></div>	<div class="clear"></div></div><script type="text/javascript">    function validate_form_step_2(){        // Check mandatory fields here.        return true;    }</script><?php}// $zoho_column_matching is a key => value matching where key = zoho column and value = file's columnfunction data_sync_into_zoho($zoho_module_name, $zoho_column_matching){    $xmlArray = buildXmlArray($zoho_column_matching);    $dataMigrationControllerObj = new ZohoDataSync();    $response = $dataMigrationControllerObj->insertRecords($zoho_module_name, $xmlArray);    $xml = simplexml_load_string($response);    echo "<pre>";    print_r($xml);    if ($dataMigrationControllerObj->checkError($xml)) {    } else {        foreach ($xml->result->recorddetail as $key => $insertedObject) {        }    }}function buildXmlArray($zoho_column_matching){    $newConverter = new CsvConversion();    return $newConverter->parse_csv_to_array($zoho_column_matching);}?>